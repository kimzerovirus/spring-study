debug: false

# spring-boot-actuator 는 스프링 부트 애플리케이션에서 제공하는 여러가지 정보를 모니터링하기 쉽게 해주는 기능
management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: env, beans

logging:
  level:
    me.kzv.simpleboard: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace # 쿼리 로그를 debug 로 볼 수 있음

spring:
  datasource:
    url: ${datasource}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${username}
    password: ${password}
  jpa:
    defer-datasource-initialization: true # test data 집어넣기
    hibernate:
      ddl-auto: create
    open-in-view: false
    show-sql: true
    properties:
      hibernate.format_sql: true # hibernate 구현체가 기본 설정이지만 정확히 어떤 구현체를 사용하는지는 모르므로 하이버네이트라고 고정시키는 것
      hibernate.default_batch_fetch_size: 100
  h2:
    console:
      enabled: true
  sql:
    init:
      mode: always
  data:
    rest:
      base-path: /api
      detection-strategy: annotated
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
---
spring:
  config:
    activate:
      on-profile: testdb
#  datasource:
#    url: jdbc:h2:mem:testdb;mode=mysql
#  sql.init.mode: always



