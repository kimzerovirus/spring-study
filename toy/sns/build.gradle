plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
//    id 'com.github.node-gradle.node' version '3.3.0'
}

group = 'me.kzv'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.vladmihalcea:hibernate-types-52:2.17.3'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

//node {
//    nodeModulesDir = file("$projectDir/frontend")
//    version = '18.3.0'
//    download = true
//}
//
//task npmBuild(type: NpmTask) {
//    args = ['runr', 'build']
//}
//
//task copyFrontEnd(type: Copy) {
//    from "$projectDir/frontend/static"
//    into 'build/resources/main/static/.'
//}
//
//task cleanFrontEnd(type: Delete) {
//    delete "$projectDir/frontend/static", "$projectDir/frontend/node_modules"
//}
//
//npmBuild.dependsOn npmInstall
//copyFrontEnd.dependsOn npmBuild
//compileJava.dependsOn copyFrontEnd
//
//clean.dependsOn cleanFrontEnd


